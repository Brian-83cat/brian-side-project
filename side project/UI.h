#ifndef _UI_H_
#define _UI_H_

enum EATMOPMsg {
	// Core process message.
	EBOPM_SHOW_MAIN_MENU = 0,
	EBOPM_SHOW_BANK_MENU,
	EBOPM_SHOW_LOG_IN_MENU,
	EBOPM_MENU_INPUT_FAIL,
	EBOPM_MENU_BANK_FAIL,
	EBOPM_Num,
};

enum ECreateAccountMsg {
	// Create account message
	ECAM_ACCOUNT_INVALID = 0,
	ECAM_INPUT_ID,
	ECAM_ID_EXIST,
	ECAM_ID_RANGE_FAIL,
	ECAM_PASSWORD_RANGE_FAIL,
	ECAM_INPUT_PASSWORD,
	ECAM_INPUT_BALANCE,
	ECAM_BALANCE_FAIL,
	ECAM_INPUT_US_BALANCE,
	ECAM_US_BALANCE_FAIL,
	ECAM_CREATE_SUCCESS,
	ECAM_Num,
};

enum ELogInMsg {
	// Log in message
	ELIM_NOT_LOG_IN = 0,
	ELIM_INPUT_ID,
	ELIM_ID_NOT_EXIST,
	ELIM_INPUT_PASSWORD,
	ELIM_INVALID_PASSWORD,
	ELIM_LOGIN_SUCCESS,

	// Inquire message
	ELIM_MONEY_KIND_INQUIRE,

	// Deposit message
	ELIM_MONEY_KIND,
	ELIM_INPUT_MONEY,
	ELIM_INVALID_BALANCE,
	ELIM_INVALID_US_BALANCE,
	ELIM_DEPOSIT_SUCCESS,

	// Whithdraw message
	ELIM_MONEY_KIND_WHITHDRAW,
	ELIM_WHITHDRAW_MONEY,
	ELIM_INVALID_BALANCE_WHITHDRAW,
	ELIM_INVALID_US_BALANCE_WHITHDRAW,
	ELIM_WHITHDRAW_FAIL,
	ELIM_WHITHDRAW_SUCCESS,

	// Transfer message
	ELIM_MONEY_KIND_TRANSFER,
	ELIM_TRANSFER_ACCOUNT,
	ELIM_INVALID_SELECT_ACCOUNT,
	ELIM_TRANSFER_MONEY,
	ELIM_INVALID_BALANCE_TRANSFER,
	ELIM_SHOW_SELECT_BALANCE,
	ELIM_INVALID_US_BALANCE_TRANSFER,
	ELIM_SHOW_SELECT_US_BALANCE,
	ELIM_SHOW_TRANSFER_BALANCE,
	ELIM_SHOW_TRANSFER_US_BALANCE,
	ELIM_TRANSFER_FAIL,
	ELIM_TRANSFER_SUCCESS,

	// Transaction record message
	ELIM_TRANSACTIONRECORD_FAIL,
	ELIM_SHOW_TRANSACTION_OPERATION,
	ELIM_SHOW_TRANSACTION_SELECT_BANK,
	ELIM_SHOW_TRANSACTION_SELECT,
	ELIM_SHOW_TRANSACTION_KIND,
	ELIM_SHOW_TRANSACTION_MONEY,
	ELIM_SHOW_TRANSACTION_BALANCE,

	// Exchange message
	ELIM_EXCHANGE_KIND,
	ELIM_EXCHANGE_CURRENCY,
	ELIM_EXCHANGE_MONEY,
	ELIM_EXCHANGE_FAIL,
	ELIM_BALANCE_NOT_ENOUGH,
	ELIM_BALANCE_NOT_ENOUGH_RATE,
	ELIM_REAL_EXCHANGE_MONEY,
	ELIM_EXCHANGE_SUCCESS,

	// Bank transfer
	ELIM_BANK_SELECT,
	ELIM_BANKTRANSFER_ACCOUNT,
	ELIM_MONEY_KIND_BANKTRANSFER,
	ELIM_BANKTRANSFER_MONEY,
	ELIM_BANKTRANSFER_FAIL,
	ELIM_BANKTRANSFER_BANK_FAIL,
	ELIM_BANKTRANSFER_SELECTID_FAIL,
	ELIM_BANKTRANSFER_MONEY_FAIL,
	ELIM_BANKTRANSFER_MONEY_INCORRECT,
	ELIM_BANKTRANSFER_SUCCESS,
	ELIM_Num,
};

enum EAdminMsg {
	// Admin message
	EAM_ADMIN_ACCOUNTID = 0,
	EAM_ADMIN_NTD,
	EAM_ADMIN_US,
	EAM_ADMIN_ID,
	EAM_ADMIN_PASSWORD,
	EAM_ADMIN_FAIL,
	EAM_NO_LOGIN,
	EAM_ADMIN_SUCCESS,
	EAM_ADMIN_NOACCOUNT,
	EAM_Num,
};

class CUI
{
public:
	CUI( void );
	// Constructor

	~CUI( void );
	// Destructor

	void GetInteger( INT &nInput );
	// Get user integer input

	void GetString( CHAR *pInput );
	// Get user string input

	void ShowInteger( INT nOutput );
	// Shoe integer output

	void ShowATMOPMsg( EATMOPMsg EMsg );
	// Show bank operator message

	void ShowCreateAccountMsg( ECreateAccountMsg EMsg );
	// Show create account process message

	void ShowInquireMsg( INT nMsg, INT nMoney );
	// Show inquire message

	void ShowLogInMsg( ELogInMsg EMsg );
	// Show log in process message

	void ShowAdminMsg( EAdminMsg EMsg );
	// Show admin message

	void ShowTransactionRecord( TTransactionRecord* pRecord, INT nNum );
	// Show transaction record

	void ShowBankRecord( TAccount* pAllAccount, INT* pTotalMoney );
	// Show bank record
};

#endif
